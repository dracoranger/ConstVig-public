[dad]
total_rounds = 50
round_length = 30
time_between_check = 5
log_file = main.log

[NetworkIn]
#premade sql queries are as follows
#searchsqlflowsportin('port as string',getcur()) - shows flows matching port in
#searchsqlflowsportout('port as string',getcur()) - shows flows matching port out
#searchsql(inp,cur) - generalized search function on sql.  feeds query directly to database, so needs to be a valid sql query =
pcapfolder = C:\Users\T\Documents\GitHub\ConstVig\put_pcaps_here
regex = [A-Z0-9]{}=
length = {31}
splitLocl = C:\Users\T\Documents\GitHub\ConstVig\SplitCap_2-1\SplitCap_2-1\SplitCap.exe

[NetworkOut]
#the range of ips that should be targeted should be in the format xxx.xxx.xxx.xxx/xx with the first ip and the subnet mask

        #separate the ports to be attacked with a ,

        #both paths are defaults, it grabs the current working directory when it is run, then appends chaff and attack. =
ip_range = 18.188.126.13/32
ports = 4001,4002,4003
submit_flag_ip = 18.218.228.223
submit_flag_port = 80
path_chaff = C:\Users\T\Documents\GitHub\ConstVig\Code\chaff
path_attack = C:\Users\T\Documents\GitHub\ConstVig\Code\attacks
chaff_per_attack = 1
randomized_and_spaced = 1
safety_buffer = 10
ip_list = 18.216.66.47,18.222.34.36,18.219.208.162
use_ip_range = 0
submit_flags_automatically = 1

[Attacks]
#format should be the file name followed by the command line argument to run it.

        #store the attacks in the path_attack directory
#add -i to have it iterate through the items in iprange

        #add -p to iterate through the ports
#add -f to add the ip address and port of where the flag should be submitted in the format submit_flag_ip + ' ' + submit_flag_port =

curl.py = python curl.py -ip

[Chaff]
#format should be the file name followed by the command line argument to run it.
#store the chaff in the path_chaff directory

        #add -i to have it iterate through the items in iprange
#add -p to iterate through the ports

        #add -f to add the ip address and port of where the flag should be submitted in the format submit_flag_ip + ' ' + submit_flag_port =

hello_world.py = python hello_world.py
        #failure.py = python failure.py
flag.py = python flag.py -f
ip.py = python ip.py -ip
port.py = python port.py -p
both.py = python both.py -ip -p

[dad]
rounds = 100
round_length = 300
path = C:\Users\x86075\Desktop\DeskCV\Code\dad.py
death_limit = 3
time_between_check = 5
log_file = main.log
child_num = 2
0 = 0

[NetworkIn]
#premade sql queries are as follows

        #searchsqlflowsportin('port as string',getcur()) - shows flows matching port in

        #searchsqlflowsportout('port as string',getcur()) - shows flows matching port out

        #searchsqlflowsflags('minimun number of flags as string',getcur()) - finds flows that have a minimum number of flags

        #searchsqlportinwithflags('port as string',getcur()) - shows flows that have flags present given the port in

        #searchsqlportoutwithflags('port as string',getcur()) - shows flows that have flags present given the port out

        #searchsql(inp,cur) - generalized search function on sql.  feeds query directly to database, so needs to be a valid sql query =
pcapfolder = C:\Users\x86075\Desktop\DeskCV\Code\put_pcaps_here
regex = [A-Z0-9]{}=
length = {31}

[NetworkOut]
#the range of ips that should be targeted should be in the format xxx.xxx.xxx.xxx/xx with the first ip and the subnet mask

        #separate the ports to be attacked with a ,

        #both paths are defaults, it grabs the current working directory when it is run, then appends chaff and attack. =
iprange = 18.217.31.170,18.216.250.27,18.188.41.218
ports = 80,4001,4002,4003
submit_flag_ip = 13.58.54.61
submit_flag_port = 80
path_chaff = C:\Users\x86075\Desktop\DeskCV\Code\chaff
path_attack = C:\Users\x86075\Desktop\DeskCV\Code\attacks

[Attacks]
#format should be the file name followed by the command line argument to run it.

        #store the attacks in the path_attack directory
#add -i to have it iterate through the items in iprange

        #add -p to iterate through the ports
#add -f to add the ip address and port of where the flag should be submitted in the format submit_flag_ip + ' ' + submit_flag_port =
hello_world.py = python hello_world.py
curl.py = python curl.py
curl2.py = python curl2.py
curl3.py = python curl3.py
looper.py = python looper.py

[Chaff]
#format should be the file name followed by the command line argument to run it.
#store the chaff in the path_chaff directory

        #add -i to have it iterate through the items in iprange
#add -p to iterate through the ports

        #add -f to add the ip address and port of where the flag should be submitted in the format submit_flag_ip + ' ' + submit_flag_port =
